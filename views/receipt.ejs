<title>Receipt Form</title>
<style>
  body {
    font-family: Arial, sans-serif;
    margin: 20px;
    padding: 20px;
    background-color: #f4f4f4;
  }

  .container {
    max-width: 400px;
    margin: auto;
    background: white;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  label {
    font-weight: bold;
  }

  input,
  button {
    width: 100%;
    margin-top: 10px;
    padding: 8px;
  }

  .service-entry {
    display: flex;
    gap: 10px;
    margin-top: 10px;
  }

  .service-entry input {
    flex: 1;
  }

  .price-input {
    max-width: 120px;
  }

  .mode-of-payment {
    margin-top: 10px;
    display: flex;
    flex-direction: row;
  }
</style>
</head>

<body>
  <div class="container">
    <h2>Create Receipt</h2>
    <form id="receiptForm" action="/receipt/create" method="POST">
      <label for="patient_name">Patient Name:</label>
      <input type="text" id="patient_name" name="patient_name" required />

      <label for="phone_number">Phone Number:</label>
      <input type="text" id="phone_number" name="patient_phone" required />

      <label>Services:</label>
      <div id="servicesContainer">
        <!-- Service entries will be appended here -->
      </div>
      <button type="button" onclick="addService()">Add Service</button>

      <!-- Hidden field that will hold the combined services (names only) -->
      <input type="hidden" id="service" name="service" />

      <label for="total">Total Amount (UGX):</label>
      <input type="number" id="total" name="total" step="0.01" readonly required />
      <label>Mode of Payment:</label>


      <section class="mode-of-payment">
        <div>
          <div>
            <label for="cash">Cash</label>
            <label for="mobile_money">Mobile Money</label>
            <label for="visa">Visa</label>
          </div>
        </div>
        <div>
          <input type="radio" id="cash" name="mode_of_payment" value="cash" required>
          <input type="radio" id="mobile_money" name="mode_of_payment" value="mobile money" required>
          <input type="radio" id="visa" name="mode_of_payment" value="visa" required>

        </div>

      </section>



      <label for="balance">Amount Paid (UGX):</label>
      <input type="number" id="amount_paid" name="amount_paid" value="0" step="0.01" required />

      <!-- Hidden field for balance -->
      <input type="hidden" id="balance" name="balance" />

      <button type="submit">Submit Receipt</button>
    </form>
  </div>

  <script>
    // Function to add a new service entry (service name and price)
    function addService() {
      const container = document.getElementById("servicesContainer");

      // Create a wrapper div for the service entry
      const serviceDiv = document.createElement("div");
      serviceDiv.className = "service-entry";

      // Create input for the service name
      const serviceName = document.createElement("input");
      serviceName.type = "text";
      serviceName.placeholder = "Service Name";
      serviceName.required = true;

      // Create input for the service price
      const servicePrice = document.createElement("input");
      servicePrice.type = "number";
      servicePrice.placeholder = "Price";
      servicePrice.className = "price-input";
      servicePrice.step = "0.01";
      servicePrice.required = true;

      // When the price changes, recalc the total
      servicePrice.addEventListener("input", calculateTotal);

      // Append inputs to the service entry container
      serviceDiv.appendChild(serviceName);
      serviceDiv.appendChild(servicePrice);

      // Append the service entry to the main container
      container.appendChild(serviceDiv);

      // Update total after adding a new service entry (in case there are pre-filled values)
      calculateTotal();
    }

    // Function to calculate the total from all price fields
    function calculateTotal() {
      let total = 0;
      const priceInputs = document.querySelectorAll('.service-entry input[type="number"]');
      priceInputs.forEach(input => {
        const value = parseFloat(input.value);
        if (!isNaN(value)) {
          total += value;
        }
      });
      document.getElementById("total").value = total.toFixed(2);
      calculateBalance();
    }

    // Function to calculate the balance
    function calculateBalance() {
      const total = parseFloat(document.getElementById("total").value) || 0;
      const amountPaid = parseFloat(document.getElementById("amount_paid").value) || 0;
      const balance = total - amountPaid;
      document.getElementById("balance").value = balance.toFixed(2);
    }

    // Add event listener to recalculate balance when amount paid changes
    document.getElementById("amount_paid").addEventListener("input", calculateBalance);

    // On form submission, combine all service names into a single hidden field "services"
    document.getElementById("receiptForm").addEventListener("submit", function (event) {
      const serviceEntries = document.querySelectorAll("#servicesContainer .service-entry");
      const servicesArray = [];
      serviceEntries.forEach(entry => {
        // Get the service name from the first input of each entry
        const nameInput = entry.querySelector('input[type="text"]');
        if (nameInput && nameInput.value.trim() !== "") {
          servicesArray.push(nameInput.value.trim());
        }
      });
      // Store the combined service names as a JSON string
      document.getElementById("service").value = JSON.stringify(servicesArray);
    });

    // Optionally add one service entry by default when the page loads
    window.addEventListener("DOMContentLoaded", () => {
      addService();
    });
  </script>
</body>

</html>